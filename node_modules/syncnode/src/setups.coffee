
{memory, server} = require 'pluggable-store'
{Repository} = synclib = require 'synclib'
ContentAddressable = require 'content-addressable'
cache = require 'pluggable-cache'
fs = require 'fs'
async = require 'async'

module.exports =
  memory: ->
    repository: new Repository(), blobStore: ContentAddressable.memory(), headStore: memory()
  fileSystem: (path, cb) ->
    cache = require 'pluggable-cache'
    cachingStore = (name) -> cache cache: memory(), persistence: server.fileSystem path+'/'+name
    cachingCAStore = (name) -> new ContentAddressable store: cachingStore name
    [commitStore, treeStore] = ['commits', 'trees'].map cachingCAStore
    headStore = cachingStore 'heads'
    blobStore = new ContentAddressable store: server.fileSystem path+'/'+'blobs'
    repository = new synclib.Repository commitStore: commitStore, treeStore: treeStore
    initStores = (cb) ->
      fs.mkdir path, ->
        async.map [commitStore.store, treeStore.store, headStore, blobStore.store],
          ((each, cb) -> each.ensureExists cb), cb
    initStores -> cb null, repository: repository, blobStore: blobStore, headStore: headStore