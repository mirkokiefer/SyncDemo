{
  "name": "content-addressable",
  "version": "0.1.1",
  "description": "a content-addressable store interface",
  "main": "lib/index.js",
  "scripts": {
    "test": "./node_modules/.bin/mocha --compilers coffee:coffee-script",
    "build": "./node_modules/.bin/coffee -o ./lib -cw ./src"
  },
  "dependencies": {
    "sha1": "1.0.0",
    "pluggable-store": "~0.1.3"
  },
  "devDependencies": {
    "mocha": "~1.6.0",
    "coffee-script": "~1.4.0"
  },
  "repository": "",
  "author": {
    "name": "Mirko Kiefer",
    "email": "mail@mirkokiefer.com"
  },
  "license": "BSD",
  "readme": "#content-addressable store\nA content-addressable store interface that can be used with any [pluggable-store](https://github.com/mirkok/pluggable-store).\n\n##Usage example\n\n```js\nContentAddressable = require('../lib/index')\n\nmemoryStore = require('pluggable-store').server().memory()\ncontentAddressable = new ContentAddressable({store: memoryStore})\n\n// depending on your pluggable store you can read/write synchronous:\nhash = contentAddressable.write('value1')\nvalue = contentAddressable.read(hash)\n\n// async operations always work:\ncontentAddressable.write('value1', function(err, hash) {\n  contentAddressable.read(hash, function(err, res) {\n    ...\n  })\n})  \n```\n",
  "_id": "content-addressable@0.1.1",
  "_from": "content-addressable@~0.1.1"
}
