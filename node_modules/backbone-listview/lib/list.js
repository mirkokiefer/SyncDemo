// Generated by CoffeeScript 1.3.3
(function() {
  var List, ListItem, bb;

  bb = require('backbone');

  ListItem = require('./list-item');

  List = bb.View.extend({
    initialize: function() {
      var col;
      if (this.options.itemView) {
        this.itemView = this.options.itemView;
      }
      col = this.collection;
      col.on('add', this.addModel, this);
      col.on('remove', this.removeModel, this);
      col.on('reset', this.resetCollection, this);
      return this.resetCollection();
    },
    itemView: ListItem,
    tagName: 'ul',
    createItemView: function(model) {
      var view;
      view = new this.itemView({
        model: model
      }).render();
      view.on('selected', this.select, this);
      return view;
    },
    select: function(view) {
      if (this.selectedView) {
        this.selectedView.selected(false);
      }
      view.selected(true);
      this.selectedView = view;
      return this.trigger('selected', view.model);
    },
    addModel: function(model) {
      var view;
      view = this.createItemView(model);
      this.viewCollection.push(view);
      return this.render();
    },
    removeModel: function(model) {
      var view;
      view = _(this.viewCollection).find(function(each) {
        return each.model === model;
      });
      view.remove();
      return delete this.viewCollection[model.cid];
    },
    resetCollection: function() {
      this.viewCollection = this.collection.map(this.createItemView, this);
      return this.render();
    },
    render: function() {
      var $el;
      $(this.el).empty();
      $el = this.$el;
      this.viewCollection.forEach(function(view) {
        view.delegateEvents();
        return $el.append(view.el);
      });
      return this;
    }
  });

  module.exports = List;

}).call(this);
