// Generated by CoffeeScript 1.3.3
(function() {
  var List, ListItem, Repository, main, render, template, _ref;

  window.jQuery = window.$ = require('jquery-browserify');

  window.Backbone = require('backbone');

  Backbone.setDomLibrary($);

  window._ = require('underscore');

  render = require('mustache').render;

  template = function(templateString) {
    return function(data) {
      return render(templateString, data);
    };
  };

  Repository = require('synclib').Repository;

  _ref = require('backbone-listview'), List = _ref.List, ListItem = _ref.ListItem;

  main = function() {
    var Entry, EntryList, PathView, branch, data1, data2, entry1, entry2, pathListView, paths, repo;
    repo = new Repository;
    branch = repo.branch();
    data1 = {
      "a/b": "test1",
      "a/c": "test2",
      "d": "test3"
    };
    data2 = {
      "a/b": "test1modified",
      "e/f/g": "test4"
    };
    branch.commit(data1);
    branch.commit(data2);
    Entry = Backbone.Model.extend({});
    EntryList = Backbone.Collection.extend({
      model: Entry
    });
    paths = new EntryList;
    entry1 = new Entry({
      path: 'test1',
      value: 'value1'
    });
    entry2 = new Entry({
      path: 'test2',
      value: 'value2'
    });
    console.log(branch.allPaths());
    paths.reset(branch.allPaths());
    PathView = ListItem.extend({
      tagName: 'li',
      template: template('{{path}}')
    });
    pathListView = new List({
      itemView: PathView,
      collection: paths
    });
    pathListView.on('selected', function(entry) {
      return $('#note').text(entry.get('value'));
    });
    return $('#master').html(pathListView.render().el);
  };

  $(main);

}).call(this);
